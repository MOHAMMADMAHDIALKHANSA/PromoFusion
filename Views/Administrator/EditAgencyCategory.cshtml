@model MarketingHub.Models.MarketingAgencyCategory

@{
    ViewData["Title"] = "Edit Agency Category";
}
<script src="~/assets/js/main.js"></script>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="container mt-4">
    <div class="card">
        <div class="card-header" style="background-color: #008374;">
            <h2 class="card-title text-white mb-0">Edit Agency Category</h2>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

            <form asp-action="EditAgencyCategory" method="post" class="needs-validation" novalidate>
                <input type="hidden" asp-for="MarketingAgencyId" />
                <input type="hidden" name="oldCategoryId" value="@Model.CategoryId" /> <!-- Hidden field for the old category id -->
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label">Category</label>
                    <select asp-for="CategoryId" class="form-control">
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Value">@category.Text</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary" style="background-color: #008374; border-color: #008374;">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
