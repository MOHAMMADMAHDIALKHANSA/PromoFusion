@model MarketingHub.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}
<script src="~/assets/js/main.js"></script>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/dashboard.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0px 0px 20px 0px var(--color-primary);
            ;
        }

    .card-title {
        font-size: 18px;
        font-weight: bold;
    }

    .chart-container {
        position: relative;
        height: 300px;
        width: 100%;
        max-width: 100%;
        margin-bottom: 30px;
    }

    .card-header {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        padding: 10px 20px;
        margin-bottom: 0;
    }

    .section-header {
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .dashboard-section {
        margin-top: 30px;
    }

    .chart-column {
        padding-right: 15px;
    }

    .chart-container {
        position: relative;
        width: 100%;
        height: 300px;
        max-width: 100%;
        margin: 0 auto;
    }

    .row.no-gutters {
        margin-right: 0;
        margin-left: 0;
    }

    .custom-spacing > .col-md-6 {
        padding-left: 15px;
        padding-right: 15px;
    }
</style>
<div class="container mt-5">
    <h1 class="text-center" style="color: var(--color-primary);">@ViewData["Title"]</h1>
    <br />
    <div class="row">
        <!-- Charts Section (Left Side) -->
        <div class="col-md-7">
            <!-- Distribution of Users Section -->
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h4 class="card-title">Distribution of Users</h4>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="height: 300px; width: 100%;">
                        <canvas id="userDistributionChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- First Bar Chart Section (Agency Category Distribution) -->
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h4 class="card-title">Agencies by Category</h4>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="height: 300px; width: 100%;">
                        <canvas id="categoryChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Second Bar Chart Section (Appointment Status Distribution) -->
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h4 class="card-title">Agencies by Contract Type</h4>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="height: 300px; width: 100%;">
                        <canvas id ="contractTypeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Cards Section (Right Side) -->
        <div class="col-md-5">
            <div class="card mb-4">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    Summary Cards
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <!-- Customer Count -->
                        <div class="col-md-12">
                            <div class="card text-white bg-info mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">Customer Count</h5>
                                    <p class="card-text">@Model.CustomerCount</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <!-- Agency Count -->
                        <div class="col-md-12">
                            <div class="card text-white bg-success mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">Agency Count</h5>
                                    <p class="card-text">@Model.AgencyCount</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <!-- Admin Count -->
                        <div class="col-md-12">
                            <div class="card text-white bg-danger mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">Admin Count</h5>
                                    <p class="card-text">@Model.AdminCount</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Posts Section -->
            <div class="card mb-4">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    Posts
                </div>
                <div class="card-body">
                    <h4 style="color: var(--color-primary);"><strong>Total Posts: </strong>@Model.TotalPostCount</h4>
                    <h4 style="color: var(--color-primary);"><strong>Top 3 Agencies by Post Count</strong></h4>
                    <ul>
                        @foreach (var agency in Model.Top3AgenciesByPostCount)
                        {
                            <li style="color: var(--color-primary);"><strong>@agency.AgencyName:</strong> @agency.PostCount posts</li>
                        }
                    </ul>
                    <h4 style="color: var(--color-primary);"><strong>Bottom 3 Agencies by Post Count</strong></h4>
                    <ul>
                        @foreach (var agency in Model.Bottom3AgenciesByPostCount)
                        {
                            <li style="color: var(--color-primary);"><strong>@agency.AgencyName:</strong> @agency.PostCount posts</li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Feedback Section -->
            <div class="card">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    Feedback
                </div>
                <div class="card-body">
                    <h4 style="color: var(--color-primary);"><strong>Total Feedbacks:</strong> @Model.TotalFeedbackCount</h4>
                    <h4 style="color: var(--color-primary);"><strong>Feedbacks by Rating</strong></h4>
                    <table class="table table-bordered table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Rating</th>
                                <th>Count</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var feedback in Model.FeedbackCountsByRating)
                            {
                                <tr>
                                    <td>@feedback.Key</td>
                                    <td>@feedback.Value</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    Reports
                </div>
                <div class="card-body">
                    <p style="color: var(--color-primary);"><strong>Total Reports:</strong> @Model.TotalReports</p>

                    </div>
                    </div>
    </div>
</div>

<div class="container mt-5">
    <div class="row custom-spacing">
        <!-- First Card (Agencies by Contract Type) -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h4 class="card-title">Appointments by Status</h4>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="appointmentStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Second Card (Proposals by Status) -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h4 class="card-title">Proposals by Status</h4>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="proposalStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <!-- Total Appointments Card -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    <h4 class="card-title">Total Appointments</h4>
                </div>
                <div class="card-body">
                    <h4 class="card-text" style="color: var(--color-primary);"><strong>Total number of appointments:</strong> @Model.TotalAppointments</h4>
                </div>
            </div>
        </div>

        <!-- Total Proposals Card -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    <h4 class="card-title">Total Proposals</h4>
                </div>
                <div class="card-body">
                    <h4 class="card-text" style="color: var(--color-primary);"><strong>Total number of proposals:</strong> @Model.TotalProposals</h4>
                </div>
            </div>
        </div>
    </div>

    <!-- Budget Statistics for Accepted Proposals Card -->
    <div class="row justify-content-center mt-5">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header text-white" style="background-color: var(--color-primary);">
                    <h4 class="card-title">Budget Statistics for Accepted Proposals</h4>
                </div>
                <div class="card-body">

                <p class="card-text" style="color: var(--color-primary);"><strong>  Minimum Budget:</strong> @Model.MinAcceptedBudget</p>
                <p class="card-text" style="color: var(--color-primary);"> <strong> Maximum Budget:</strong> @Model.MaxAcceptedBudget</p>
                <p class="card-text" style="color: var(--color-primary);"> <strong> Average Budget:</strong> @Model.AvgAcceptedBudget</p>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Customer List -->
<div class="container">
    <h3 style="color: var(--color-primary);">Customer List</h3>
    <table id="customer-table" class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Total Appointments</th>
                <th>Total Proposals</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Model.CustomerDashboardList.Take(5))
            {
                <tr>
                    <td style="color: var(--color-primary);">@customer.FirstName</td>
                    <td style="color: var(--color-primary);">@customer.LastName</td>
                    <td style="color: var(--color-primary);">@customer.Email</td>
                    <td style="color: var(--color-primary);">@customer.TotalAppointments</td>
                    <td style="color: var(--color-primary);">@customer.TotalProposals</td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>

   
    // Agency Contract Type Distribution Chart
    var ctxContractType = document.getElementById('contractTypeChart').getContext('2d');
    var contractTypeChart = new Chart(ctxContractType, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.AgencyContractTypeCounts.Keys)),
            datasets: [{
                label: '# of Agencies',
                data: @Html.Raw(Json.Serialize(Model.AgencyContractTypeCounts.Values)),
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Proposal Status Distribution Chart
    var ctxProposalStatus = document.getElementById('proposalStatusChart').getContext('2d');
    var proposalStatusChart = new Chart(ctxProposalStatus, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.ProposalStatusCounts.Keys)),
            datasets: [{
                label: '# of Proposals',
                data: @Html.Raw(Json.Serialize(Model.ProposalStatusCounts.Values)),
                backgroundColor: 'rgba(255, 159, 64, 0.2)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // User Distribution Pie Chart
    var ctxUserDistribution = document.getElementById('userDistributionChart').getContext('2d');
    var userDistributionChart = new Chart(ctxUserDistribution, {
        type: 'pie',
        data: {
            labels: ['Customers', 'Agencies', 'Admins'],
            datasets: [{
                data: [@Model.CustomerCount, @Model.AgencyCount, @Model.AdminCount],
                backgroundColor: ['blue', 'green', 'red']
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Agency Category Distribution Chart
    var ctxCategory = document.getElementById('categoryChart').getContext('2d');
    var categoryChart = new Chart(ctxCategory, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.AgencyCategoryCounts.Keys)),
            datasets: [{
                label: '# of Agencies',
                data: @Html.Raw(Json.Serialize(Model.AgencyCategoryCounts.Values)),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Appointment Status Distribution Chart
    var ctxAppointmentStatus = document.getElementById('appointmentStatusChart').getContext('2d');
    var appointmentStatusChart = new Chart(ctxAppointmentStatus, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.AppointmentStatusCounts.Keys)),
            datasets: [{
                label: '# of Appointments',
                data: @Html.Raw(Json.Serialize(Model.AppointmentStatusCounts.Values)),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
    var minBudget = _context.Proposals.Min(p => p.MinBudget);
    var maxBudget = _context.Proposals.Max(p => p.MaxBudget);
    var avgBudget = _context.Proposals.Average(p => (p.MinBudget + p.MaxBudget) / 2);

</script>

